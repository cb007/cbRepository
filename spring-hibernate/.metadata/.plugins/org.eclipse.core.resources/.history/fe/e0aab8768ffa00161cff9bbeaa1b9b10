package com.scope.banking.aspects;

import java.io.IOException;
import java.util.logging.FileHandler;
import java.util.logging.Logger;

import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.annotation.Aspect;


@Aspect
public class LoggingAspect {
	private final static Logger logger = Logger.getLogger(LoggingAspect .class.getName()); 
	
   public LoggingAspect() throws SecurityException, IOException
   {
	   FileHandler fh = new FileHandler("C:/temp/MyLogFile.log");
		 logger.addHandler(fh);

   }
	@Before("execution(* com.scope.Banking.entities.Flight.getServiceProvider(..))")
	public void PersonlogBefore(JoinPoint joinPoint) {

		System.out.println("Person Name logBefore() is running!");
		System.out.println("hijacked : " + joinPoint.getSignature().getName());
		System.out.println("******");
	}
	
	
	
	/*@After("execution(* com.scope.entities.Person.getName(..))")
	public void logAfter(JoinPoint joinPoint) {

		System.out.println("Person get Name logAfter() is running!");
		System.out.println("hijacked : " + joinPoint.getSignature().getName());
		System.out.println("******");

	}
	
	@AfterThrowing( pointcut="execution(* com.scope.entities.Person.setPersonId(..))", throwing="exception")
	public void afterThrowing(JoinPoint joinPoint, Throwable exception) throws Throwable
	{ 
		logger.info("Inside CatchThrowException.afterThrowing() method...");
		logger.info("Running after throwing exception..."); 
		logger.info("Exception : " + exception); 
	} */
}

